@use "sass:math";

@mixin keyframes-animation($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
};

@mixin prefix-property($name, $value) {
  -webkit-#{$name}: $value;
          #{$name}: $value;
};

$bg-color: #30395C;

html, body, .vsc-initialized {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  overflow: hidden;
  background: #{$bg-color};
}

.town-container {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 45%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.houses-container {
  position: relative;
  flex-direction: row;
  align-items: bottom;
  justify-content: start;
  flex-wrap: nowrap;
  width: 120%;
  height: 75%;
  padding: 0px;
  overflow: hidden;
}

// make sure this matches up with the html
$max-homes: 17;
$home-heights: ();
$home-widths: ();

$percentage-per-house: math.div(1, $max-homes);

@for $i from 1 to $max-homes {
  // $home-heights: append($home-heights, math.div(85 + random(15), 100));
  $home-widths: append($home-widths, ($percentage-per-house + (math.div(random(2), 100))));
}

@for $i from 1 to $max-homes {
  .houses-container>img:nth-child(#{$i}) {
    width: #{nth($home-widths, $i) * 100%};
        // height: #{nth($home-heights, $i) * 100%};
  }
}

.houses-container img {
  max-height: 100%;
  padding: 0px;
  box-shadow: 0 -10px 30px 0px #000000;
}

.wave-container {
  position: absolute;
  width: 100%;
  height: 25%;
  bottom: 0px;
  background: #000000;
  border: 0px;
}

@include keyframes-animation(move-wave) {
  from {
    transform: scaleX(1) translateY(0%);    

  } to {
    transform: scaleX(1.05) translateY(13%);
  }
}

$wave-duration: 5s;

.wave-container::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 70%;
  bottom: 0;
  left: 0;
  border: 0px;
  background-image: url("../images/wave.svg");
  background-size: 45% 100%;

  @include prefix-property(animation, move-wave #{$wave-duration} alternate ease-in-out infinite);
}


