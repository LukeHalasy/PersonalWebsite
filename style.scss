@use "sass:math";
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@900&family=Lora:ital,wght@0,400;1,500&family=Roboto+Mono:wght@500&display=swap');

$bg-color: #0C121F;
$lightup-duration: 1.8s;
$orbit-radius: 0.45em;
$dot-radius: 0.7em;
$dot-colors: (
  /*
  light-purple: #8191D1,
  dull-red: #8B3838,
  hunter-green: #3D8C94,
  light-pink: #C476BE,
  carolina-blue: #95C8EF,
  */
  dark-green: #006F7B,
  light-green: #003D54
);

$content-text-color: #F7F9FF;
// $content-text-color: #FFF;
$container-bg-color: #070B17;
// $container-border-color: #5096D3;
$container-border-color: #00A286;
$container-border-width: 0.3rem;
$container-width: 80%;
$container-height: 85%;
// $title-underline-color: #006B77;
$title-underline-color: #348995;
$link-cards-color-one: #003D54;
$link-cards-color-two: #006F7B;

$circle-animation-time: 5s;

html, body {
  background: #{$bg-color};
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

* {
	user-select: none;
}

.content-container {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.content {
  width: $container-width;
  height: $container-height;
  // left: math.div(calc(100% - $container-width), 2);
  // top: math.div(calc(100% - $container-height), 2);

  background-color: #{$container-bg-color};
  border: #{$container-border-width} solid #{$container-border-color};
  // box-shadow: 0 1px 50px #000;
  border-radius: 0.2%;

  display: flex;
  flex-direction: row;

  color: #{$content-text-color};
  text-align: center;
  // font-family: 'Roboto Mono', monospace;
  font-size: 5.0rem;
  z-index: 2;
}

.content .title {
  transform: scale(1.00);
  transition: 0.35s;
}

.content .title:hover {
  transform: scale(1.01);
  transition: 0.35s;
}

.content .link-cards div a {
  transform: scale(1.00);
  transition: 0.35s;
}

.content .link-cards div:hover a {
  transform: scale(1.03);
  transition: 0.35s;
}

.title {
  font-size: 1.2em;
  text-decoration: underline;
  text-decoration-color: #{$title-underline-color};
  text-decoration-thickness: 0.08em;
  font-family: 'Lora', serif;
  margin-top: 0.5em;
  font-style: italic;
  flex-grow: 4;
}

.link-cards {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  flex-grow: 3;
}

.link-cards div {
  display: flex;
  cursor: pointer;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  background-color: #{$link-cards-color-one};
}

.link-cards div:nth-child(2) {
  background-color: #{$link-cards-color-two};
}

/*
@keyframes typing {
  from { width: 0% }
  to { width: 100% }
}
*/

/* The typewriter cursor effect */
/*
@keyframes blink-caret {
  from {
    border-color: transparent; 
  } 50% {
    border-color: #{$container-border-color} ;
  } to {
    border-color: transparent; 
  }
}
*/

a {
  position: relative;
  font-size: 0.65em;
  font-family: 'Lora', serif;
  font-style: normal;
  letter-spacing: 0.05em;
  display: inline-block;
  text-decoration: none;
  color: inherit;
}

a::before {
  content: "";
  position: absolute;
  display: block;
  width: 100%;
  height: 2px;
  bottom: 0px;
  left: 0px;
  background-color: #{$content-text-color};
  transform: scaleX(0);
  transition: transform 0.25s ease;
}
.content .link-cards div:hover a::before {
  transform: scaleX(1);
}

.selfie {
  width: 150px;
  height: 150px;
  border: 3px solid #FFF;
  background-color: #577DF5;
  border-radius: 50%;
  margin-left: 50%;
  transform: translateX( -50% );
}

img {
  margin-top: 7px;
  margin-left: -5px;
  width: 120px;
  height: 120px;
  transform: scale( 1.55, 1.55 );
}


@mixin keyframes-animation($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
};

@mixin prefix-property($name, $value) {
  -webkit-#{$name}: $value;
          #{$name}: $value;
};

.dot {
  position: absolute;
  border-radius: 50%;
  height: $dot-radius;
  width: $dot-radius;
  z-index: 1;
  opacity: 0;
}


@include keyframes-animation(circular-animation) {
  from {
    // @include prefix-property(transform, rotate(0deg) translateX(#{$orbit-radius}));
    @include prefix-property(opacity, 1);
  }
  to {
    // @include prefix-property(transform, rotate(360deg) translateX(#{$orbit-radius}));
    @include prefix-property(opacity, 1);
  }
}


@include keyframes-animation(circular-animation-reverse) {
  from {
    // @include prefix-property(transform, rotate(360deg) translateX(#{$orbit-radius}));
    @include prefix-property(opacity, 1);
  }
  to {
    // @include prefix-property(transform, rotate(0deg) translateX(#{$orbit-radius}));
    @include prefix-property(opacity, 1);
  }
}

@include keyframes-animation(animation-lightup) {
  from {
    opacity: 0;    
  }
  to {
    opacity: 1;
  }
}

@each $color-name, $color-value in $dot-colors {
  .dot.theme-#{$color-name} {
    background: #{$color-value};
    @include prefix-property(animation, circular-animation #{$circle-animation-time} normal infinite)
  }

  
  .dot.theme-#{$color-name}::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border-radius: 50%;
    border: 0px;
    opacity: 0;
    background-color: transparent;

    box-shadow: 0 1px 40px 10px #{$color-value};
    @include prefix-property(animation, animation-lightup #{$lightup-duration} alternate ease-in infinite);
  }
  

  .dot.theme-#{$color-name}.reverse {
    @include prefix-property(animation, circular-animation-reverse #{$circle-animation-time} normal infinite)
  }
}
